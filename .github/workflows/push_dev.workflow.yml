name: Dev branche checks

on:
  push:
    branches:
      - 3-dev

jobs:
  documentation-snippet-tests:
    name: Documentation - Snippet Tests
    runs-on: ubuntu-18.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - run: docker-compose -f .ci/doc/docker-compose.yml run doc-tests node index

  lint:
    name: Linters
    runs-on: ubuntu-18.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - name: Install dependencies
        run: |
          go version
          go get -u golang.org/x/lint/golint
      # Uncomment following lines when https://github.com/kuzzleio/sdk-go/issues/288 is fixed
      # - name: Run Vet
      #   run: go vet ./...
      # - name: Run Lint
      #   run: golint ./...
      - name: Run Fmt (format also documentation snippets)
        run: gofmt -l ./**/*.go

  build:
    name: Build with ${{ matrix.goVersion }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    needs: [lint]
    strategy:
      matrix:
        goVersion: [1.12.x, 1.13.x, 1.14.x, 1.15.x]
        os: [ubuntu-18.04, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.goVersion }}
      - name: Build
        run: go build -v ./...

  coverage:
    name: Tests on latest Go version with coverage
    runs-on: ubuntu-18.04
    timeout-minutes: 30
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - name: Test With Coverage
        run: go test -v  -coverprofile=coverage.txt -covermode=atomic ./...
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

  test:
    name: Test with ${{ matrix.goVersion }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    needs: [build]
    strategy:
      matrix:
        goVersion: [1.12.x, 1.13.x, 1.14.x, 1.15.x]
        os: [ubuntu-18.04, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.goVersion }}
      - name: Test
        run: go test -v ./...

  doc-deploy:
    name: Deploy Doc to NEXT
    runs-on: ubuntu-latest
    needs:
      [documentation-dead-links, documentation-snippet-tests, test, coverage]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Extract references from context
        shell: bash
        id: extract-refs
        run: |
          echo "::set-output name=version::$(git describe --abbrev=0 --tags | cut -d. -f 1)"
          echo "::set-output name=repo::$(echo $GITHUB_REPOSITORY | cut -d/ -f 2)"
          echo "::set-output name=branch::$(echo $GITHUB_REF | cut -d/ -f 3)"
      - uses: convictional/trigger-workflow-and-wait@v1.3.0
        with:
          owner: kuzzleio
          repo: documentation
          github_token: ${{ secrets.ACCESS_TOKEN_CI }}
          workflow_file_name: child_repo.workflow.yml
          ref: develop
          inputs: '{"repo_name": "${{ steps.extract-refs.outputs.repo }}", "branch": "${{ steps.extract-refs.outputs.branch }}", "version": "${{ steps.extract-refs.outputs.version }}"}'
